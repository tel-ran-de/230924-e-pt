# Тема: Цикл while. Операторы break, continue, else.

# Упражнение 1: Поиск числа
#
# Напишите программу, которая запрашивает у пользователя числа, пока он не введет число совпадающее
# с переменной num (num = любое число от 0 до 100).  Если введенное число меньше num, программа должна
# выводить сообщение "Слишком маленькое число" и продолжать запрашивать числа. Если число больше num,
# программа должна вывести сообщение "Вы ввели большее число" и продолжать запрашивать числа.
# Если пользователь угадал, то программа должна вывести "Вы угадали число" и завершиться.
'''
import random
num = random.randint(0,100)
while True:
    user_input = int(input('Введите число: '))
    if user_input < num:
        print("Слишком маленькое число")
    elif user_input > num:
        print("Вы ввели большее число")
    elif user_input == num:
        print("Вы угадали число")
        break

from operator import index

# Упражнение 2: Проверка пароля
#
# Напишите программу, которая будет запрашивать у пользователя пароль до тех пор, пока не будет введен
# правильный пароль "python123", либо пока не закончатся попытки. Если введенный пароль содержит пробелы,
# программа должна выводить сообщение "Пароль не должен содержать пробелов" и продолжать запрашивать пароль.
# Если введен правильный пароль, программа должна выводить сообщение "Доступ разрешен" и завершаться.
# Если после трех неправильных попыток пароль не введен правильно, программа должна выводить сообщение
# "Превышено количество попыток" и завершаться.

password = ('python123')
password_attempts = 0
while True:
    input_user = input('Введите пароль: ')
    if ' ' in input_user:
        print("Пароль не должен содержать пробелов")
    if input_user == password:
        print(input("Доступ разрешен"))
        break
    elif input_user != password:
        print("Пароль введён не правильно!")
    password_attempts += 1
    if password_attempts == 3:
        print("Превышено количество попыток")
        break
    print('Попытка', password_attempts, 'из 3 попыток')

# Упражнение 3: Работа со списком покупок
#
# Напишите программу, которая будет запрашивать у пользователя элементы для списка покупок до тех пор,
# пока не будет введено слово "стоп", либо пока количество покупок не станет больше 6. Если введенное
# слово уже есть в списке, программа должна выводить сообщение "Этот элемент уже в списке" и продолжать
# запрашивать новые элементы. Если введено слово "стоп", программа должна выводить сообщение
# "Формирование списка завершено" и завершаться. Если количество покупок ставится больше 6,
# то программа должна вывести: “Превышен лимит покупок.” и завершиться.
# Перед завершением программа должна выводить итоговый список покупок и общее количество элементов в нем.

shopping_list = []

while True:
    input_user = input('Добавьте элемент в список покупок: ')
    if input_user == 'stop':
        print("Формирование списка завершено")
        break
    if input_user in shopping_list:
        print("Этот элемент уже в списке")
        continue

    shopping_list.append(input_user)
    print( input_user, 'добавлен в список.')
    if len(shopping_list) >= 6:
        print('Превышен лимит покупок!')
        break
print("Итоговый список покупок:")
for nr, input_user in enumerate(shopping_list, start=1):
    print(nr, input_user)
full_list = len(shopping_list)
print('Общее количество элементов:', full_list)

# Тема: Цикл for

# Упражнение 1: Подсчет гласных в строке
#
# Напишите программу, которая принимает строку от пользователя и подсчитывать количество гласных букв (a, e, i, o, u)
# в этой строке.Используйте цикл for и условие if.

user_letters = input('Напишите слово: ')
vowels = "aeiou"
vowels_count = 0
for letter in user_letters:
    if letter in vowels:
        vowels_count += 1

print(f'Количество гласных букв: {vowels_count}')

# Упражнение 2: Генерация и вывод последовательности чисел
#
# Напишите программу, которая генерит и выводит последовательность чисел от 1 до 20,
# но выводит "Fizz" вместо чисел, кратных 3, "Buzz" вместо чисел, кратных 5, и "FizzBuzz"
# вместо чисел, кратных как 3, так и 5. Используйте цикл for и функцию range.
for i in range(1, 21):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
        print(i)



# Проект 1: Управление библиотекой
#
# Описание:
# Разработайте программу для управления библиотекой. Программа должна позволять добавлять книги в библиотеку,
# удалять книги, искать книги по автору и выводить список всех книг с их авторами и статусами (в наличии или выдана).
#
# Требования: Реализуйте работу всех пунктов меню.
#
# Продолжите программу ниже.

library = [["Война и мир", "Толстой", "в наличии"],
            ["Преступление и наказание", "Достоевский", "выдана"],
           ["Мастер и Маргарита", "Булгаков", "в наличии"]]
while True:
     print("\nМеню")
     print("1. Показать список всех книг")
     print("2. Добавить книгу")
     print("3. Удалить книгу")
     print("4. Поменять статус книги")
     print("5. Показать книги определенного автора")
     print("6. Показать книги с определенным статусом")
     choice = input("Выберите действие, введя его номер: ")

     if choice == '1':
         for book in library:
             print(f"Название: {book[0]}, Автор: {book[1]}, Статус: {book[2]}")

     elif choice == '2':
         title_book = input('Введите название книги: ')
         author_book = input('Введите автора: ')
         status_book = input('Введите статус книги(в наличии или выдана): ')
         library.append([title_book, author_book, status_book])
         print('Книга добавлена!')


     elif choice == '3':
         delete_book = input('Какую книгу вы хотите удалить? ')
         for book in library:
             if book[0] == delete_book:
                 library.remove(book)
                 print('Книга удалена!')


     elif choice == '4':
         title_book = input('Выберите книгу: ')
         for book in library:
             if book[0] == title_book:
                 new_status = input("Поменяйте статус книги(в наличии или выдана): ")
                 book[2] = new_status
                 print("Статус книги изменен!")

     elif choice == '5':
         author_book = input('Выберите книги определенного автора: ')
         for book in library:
             if book[1] == author_book:
                 print(book)
     elif choice == '6':
         status_book = input('Напишите статус книги(в наличии или выдана): ')
         for book in library:
             if book[2] == status_book:
                 print(book)

'''

# Проект 2: Анализ посещаемости на сайте
#
# Разработайте программу для анализа посещаемости на сайте. Программа должна позволять вводить количество посещений
# за каждый день недели, определять дни с наибольшей и наименьшей посещаемостью, рассчитывать среднюю посещаемость
# за неделю и выводить дни с посещаемостью выше среднего.
#
days = ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"]
visits = []

    # print sum [visits]

while True:
    for day in days:
        visit = int(input(f'Введите количество посещений за {day}: '))
        visits.append(visit)
    max_visits = max(visits)
    min_visits = min(visits)
    average_visit = sum(visits) / len(days)
    max_day = days[visits.index(max_visits)]
    min_day = days[visits.index(min_visits)]
    #above_average_visit = []
    #for a_day in visits:
        #if a_day > average_visit:
            #above_average_visit.append(a_day)
    above_average_day = []
    for i in range(len(days)):
        if visits[i] > float(average_visit):
            above_average_day.append(i)

    print(f'День с наибольшей посещаемостью: {max_day}')
    print(f'День с наименьшей посещаемостью: {min_day}')
    print(f'Средняя посещаемость за неделю: {average_visit}')
    #print(f'Дни с посещаемостью выше среднего: {above_average_visit}')
    print(f'Дни с посещаемостью выше среднего: {above_average_day}')




        #max_visit = max(visits)
        #print(min_visit)
        #print(max_visit)
       # print(f'дни с наибольшей посещаемостью: {max_visit}')



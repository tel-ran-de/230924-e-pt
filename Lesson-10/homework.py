# Тема: Цикл while. Операторы break, continue, else.

# Упражнение 1: Поиск числа
#
# Напишите программу, которая запрашивает у пользователя числа, пока он не введет число совпадающее
# с переменной num (num = любое число от 0 до 100).  Если введенное число меньше num, программа должна
# выводить сообщение "Слишком маленькое число" и продолжать запрашивать числа. Если число больше num,
# программа должна вывести сообщение "Вы ввели большее число" и продолжать запрашивать числа.
# Если пользователь угадал, то программа должна вывести "Вы угадали число" и завершиться.
# num = 69
#
# while True:
#     l = int(input("Введите число от 1 до 100"))
#     if l < num:
#         print("Слишком маленькое число")
#     if l > num:
#         print("Cлишком большое число")
#     if l == num:
#         print("Вы угадали")

# Упражнение 2: Проверка пароля
#
# Напишите программу, которая будет запрашивать у пользователя пароль до тех пор, пока не будет введен
# правильный пароль "python123", либо пока не закончатся попытки. Если введенный пароль содержит пробелы,
# программа должна выводить сообщение "Пароль не должен содержать пробелов" и продолжать запрашивать пароль.
# Если введен правильный пароль, программа должна выводить сообщение "Доступ разрешен" и завершаться.
# Если после трех неправильных попыток пароль не введен правильно, программа должна выводить сообщение
# "Превышено количество попыток" и завершаться.

# p = "python123"
# wrong = []
#
# while True:
#     x = input("Введите пароль")
#     wrong += [x]
#     if " " in x:
#         print("Пароль не должен содержать пробелы")
#         continue
#     elif x == p:
#         print("Доступ разрешен")
#         break
#     elif len(wrong) > 3:
#         print("Превышено количество попыток")
#         break
#     elif x != p:
#         print("Пароль невереный")




# Упражнение 3: Работа со списком покупок
#
# Напишите программу, которая будет запрашивать у пользователя элементы для списка покупок до тех пор,
# пока не будет введено слово "стоп", либо пока количество покупок не станет больше 6. Если введенное
# слово уже есть в списке, программа должна выводить сообщение "Этот элемент уже в списке" и продолжать
# запрашивать новые элементы. Если введено слово "стоп", программа должна выводить сообщение
# "Формирование списка завершено" и завершаться. Если количество покупок становится больше 6,
# то программа должна вывести: “Превышен лимит покупок.” и завершиться.
# Перед завершением программа должна выводить итоговый список покупок и общее количество элементов в нем.

# sum = []
# print("Введите список покупок: ")
# while True:
#     p = input()
#
#     if len(sum) >= 6:
#         print(f"Превышен лимит покупок. Список покупок: {sum}. Количество покупок {len(sum)}.")
#         break
#
#     if p == "стоп":
#         print(f"Формирование списка завершено. Список покупок: {sum}. Количество покупок {len(sum)}")
#         break
#
#     if p in sum:
#         print("Этот элемент уже в списке")
#         continue
#
#     sum += [p]






# Тема: Цикл for

# Упражнение 1: Подсчет гласных в строке
#
# Напишите программу, которая принимает строку от пользователя и подсчитывать количество гласных букв (a, e, i, o, u)
# в этой строке.Используйте цикл for и условие if.
# stroka = input()
# sum = 0
# for x in ("a", "e", "i", "o", "u"):
#
#                                              # if x in stroka:
#     a = stroka.count(x)
#     sum += a
# print(sum)

# Упражнение 2: Генерация и вывод последовательности чисел
#
# Напишите программу, которая генерит и выводит последовательность чисел от 1 до 20,
# но выводит "Fizz" вместо чисел, кратных 3, "Buzz" вместо чисел, кратных 5, и "FizzBuzz"
# вместо чисел, кратных как 3, так и 5. Используйте цикл for и функцию range.

# for i in range(1, 21):
#     if i % 5 == 0 and i % 3 == 0:
#         print("FizzBuzz")
#     if i % 3 == 0:
#         print("Fizz")
#         continue
#     if i % 5 == 0:
#         print("Buzz")
#         continue
#
#     print(i)


# Проект 1: Управление библиотекой
#
# Описание:
# Разработайте программу для управления библиотекой. Программа должна позволять добавлять книги в библиотеку,
# удалять книги, искать книги по автору и выводить список всех книг с их авторами и статусами (в наличии или выдана).
#
# Требования: Реализуйте работу всех пунктов меню.
#
# library = [["Война и мир", "Толстой", "в наличии"],
#            ["Преступление и наказание", "Достоевский", "выдана"],
#            ["Мастер и Маргарита", "Булгаков", "в наличии"]]
#
#
# while True:
#     print("\nМеню")
#     print("1. Показать список всех книг")
#     print("2. Добавить книгу")
#     print("3. Удалить книгу")
#     print("4. Поменять статус книги")
#     print("5. Показать книги определенного автора")
#     print("6. Показать книги с определенным статусом")
#     choice = input("Выберите действие, введя его номер: ")
#     if choice == "1":
#         for i, x in enumerate(library):
#             print((i + 1), x[0])
#
#     if choice == "2":
#         name_of_newbook = input("Введите название новой книги")
#         author_of_newbook = input("Введите автора новой книги")
#         library += [[name_of_newbook] + [author_of_newbook] + ["в наличии"]]
#
#     if choice == "3":
#         delete_book = input("Введите название книги, которую хотите удалить: ")
#
#         for i, x in enumerate(library):
#             if x[0] == delete_book:
#                 del library[i]
#
#     if choice == "4":
#         status_book = input("Выберете название книги, статус которой вы хотите поменять: ")
#
#         for i, x in enumerate(library):
#             if x[0] == status_book:
#                 if x[2] == "выдана":
#                     x[2] = "в наличии"
#                 if x[2] == "в наличии":
#                     x[2] = "выдана"
#
#     if choice == "5":
#         chose_author = input("Выберите книги по автору")
#         for i, x in enumerate(library):
#             if x[1] == chose_author:
#                 print(x[0])
#
#     if choice == "6":
#         print("Чтобы посмотреть книги, которые сейчас в наличии, нажимите 1: ")
#         print("Чтобы посмотреть выданные книги, нажмите 2: ")
#         choice = input()
#         if choice == "1":
#             for i, x in enumerate(library):
#                 if x[2] == "в наличии":
#                     print(x[0])
#         if choice == "2":
#             for i, x in enumerate(library):
#                 if x[2] == "выдана":
#                     print(x[0])




# Проект 2: Анализ посещаемости на сайте
#
# Разработайте программу для анализа посещаемости на сайте. Программа должна позволять вводить количество посещений
# за каждый день недели, определять дни с наибольшей и наименьшей посещаемостью, рассчитывать среднюю посещаемость
# за неделю и выводить дни с посещаемостью выше среднего.
#
# days = ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"]
# visits = []
#
# while True:
#     print("1. Добавить количество посещений для определенного дня недели.")
#     print("2. Определить день с наибольшей посещаемостью.")
#     print("3. Определить день с наименьшей посещаемостью.")
#     print("4. Рассчитать среднюю посещаемость за неделю.")
#     print("5. Вывести дни с посещаемостью выше среднего.")
#     choice = input("Выберите действие, введя его номер: ")
#
#     if choice == "1":
#         while len(visits) < 7:
#             for x in days:
#                 print(x)
#                 day_of_week = int(input("Введите кол-во дней"))
#                 visits += [day_of_week]
#             print(visits)
#
#     if choice == "2":
#
#         max_number = max(visits)
#         max_index = visits.index(max_number)
#         print(days[max_index], max_number, "посещений за неделю")
#
#     if choice == "3":
#
#         min_number = min(visits)
#         min_index = visits.index(min_number)
#         print(days[min_index], min_number, "посещений за неделю")
#
#     if choice == "4":
#         sum = 0
#         for x in visits:
#             sum += x
#         print(sum / 7, "посещений за неделю")
#
#     if choice == "5":
#         print("Дни с посещаемостью выше среднего:")
#         sum = 0
#         for x in visits:
#             sum += x
#         for i, x in enumerate(visits):
#             if (x / 1) > (sum / 7):
#                 print(days[i], x, "посещений")


















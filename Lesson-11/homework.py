# Тема: Вложенные циклы

# Упражнение 1: Проверка простых чисел в диапазоне
#
# Напишите программу, которая выводит все простые числа в диапазоне от 2 до 50.
# Используйте вложенный цикл for для перебора чисел в указанном диапазоне.
# Внутри вложенного цикла while используйте для проверки, является ли число простым.
# Число является простым, если оно делится только на 1 и на само себя.
# Для каждого числа в диапазоне от 2 до 50, проверьте, делится ли оно на любое число меньше него (кроме 1).

for num in range(2, 50):
    t = True
    i = 2

    while i < num:
        if num % i == 0:
            t = False
            break
        i += 1
    if t:
        print(num)


# Упражнение 2: Таблица умножения

# - Создайте программу, которая выводит таблицу умножения размером 10x10.
# - Используйте вложенные циклы `for` для создания строк и столбцов таблицы.
# - Форматируйте вывод так, чтобы таблица выглядела аккуратно.


print('    ', end='')
for i in range(1, 11):
    print(f'{i:4}', end='')
print('\n---------------------------------------------')

for i in range(1, 11):
    print(f'{i:2} |', end='')
    for j in range(1, 11):
        print(f'{i * j:4}', end='')
    print()


# Ожидаемый вывод программы:

#      1   2   3   4   5   6   7   8   9  10
# ---------------------------------------------
#  1 |   1   2   3   4   5   6   7   8   9  10
#  2 |   2   4   6   8  10  12  14  16  18  20
#  3 |   3   6   9  12  15  18  21  24  27  30
#  4 |   4   8  12  16  20  24  28  32  36  40
#  5 |   5  10  15  20  25  30  35  40  45  50
#  6 |   6  12  18  24  30  36  42  48  54  60
#  7 |   7  14  21  28  35  42  49  56  63  70
#  8 |   8  16  24  32  40  48  56  64  72  80
#  9 |   9  18  27  36  45  54  63  72  81  90
# 10 |  10  20  30  40  50  60  70  80  90 100


# Тема: Генераторы списков

# Упражнение 1: Напишите программу с помощью генераторов списков,
# которая находит все числа от 1 до 1000, которые делятся на 7.

for i in range(1, 1000):
    if i % 7 == 0:
        print(i)

# Упражнение 2: Напишите программу с помощь генераторов списков,
# которая найдите все числа от 1 до 1000, в которых есть цифра 3.

for i in range(1, 1000):
    if '3' in str(i):
        print(i)

# Упражнение 3: Напишите программу с помощь генераторов списков,
# которая посчитает количество пробелов в строке
some_string = 'the slow solid squid swam sumptuously through the slimy swamp'
count = 0
for char in some_string:
    if char == " ":
        count += 1
print(count)


# Упражнение 4: Напишите программу с помощь генераторов списков,
# которая создаст список всех гласных букв в строке
some_string = 'the quick brown fox jumps over the lazy dog'

for char in some_string:
    if char in "aeiou":


        print(char, end=" ")


print('---------------')

# Упражнение 5: Сумма элементов в каждом ряду матрицы
# С помощью генераторов списков создайте матрицу 3x3 из чисел от 20 до 28
# Ожидаемая матрица:
# [20, 21, 22]
# [23, 24, 25]
# [26, 27, 28]


matrix = [[20 + i + j * 3 for i in range(3)] for j in range(3)]

for row in matrix:
    print(row)

# Напишите код для вычисления суммы элементов в каждом ряду (в каждом вложенном списке).
# Выведите получившиеся значения в консоль.

row_sum = [sum(row) for row in matrix]
for sums in row_sum:
    print(sums)

print("-------------")
# Упражнение 6: Подсчет количества четных и нечетных чисел в матрице
# Дана матрица
# Дана матрица
matrix = [
    [2, 5, 8, 11],
    [14, 17, 20, 23],
    [26, 29, 32, 35],
    [38, 41, 44, 47]
]

chot = 0
nechot = 0

for row in matrix:
    for num in row:
        if num % 2 == 0:
            chot += 1
        else:
            nechot += 1

print("Четные:", chot)
print("Нечетные:", nechot)

print("-------------")
# Напишите программу для посчета четных и нечетных чисел в каждом вложенном списке (строке матрицы).
# Выведите значения в констоль:

matrix = [
    [2, 5, 8, 11],
    [14, 17, 20, 23],
    [26, 29, 32, 35],
    [38, 41, 44, 47]
]

for row in matrix:
    chot = 0
    nechot = 0
    for num in row:
        if num % 2 == 0:
            chot += 1
        else:
            nechot += 1

    print(f"Количество четных чисел: {chot}", f"Количество нечетных чисел: {nechot}")

print("-----------")

# Упражнение 7: Поиск минимального и максимального значения в матрице
# Дана матрица
matrix = [
    [34, 23, 18],
    [14, 55, 27],
    [19, 42, 31]
]
min_value = matrix[0][0]
max_value = matrix[0][0]

for row in matrix:
    for num in row:
        if num < min_value:
            min_value = num
        if num > max_value:
            max_value = num

print("Минимальное значение:", min_value, "Максимальное значение:", max_value)


print("---------")
# Напишите программу для вывода минимального и максимального значений в каждом ряду (вложенном списке) матрицы.
for row in matrix:
    min_value = matrix[0][0]
    max_value = matrix[0][0]

    for num in row:
        if num < min_value:
            min_value = num
        if num > max_value:
            max_value = num
    print("Минимальное значение:", min_value, "Максимальное значение:", max_value)

print("------------")
print()
# Упражнение 8: Перемножение матриц
#
# - Создайте с помощью генераторов списков две матрицы размером 3x3 со значениями от 1 до 9 и от 9 до \
# matrix1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# matrix2 = [[9, 8, 7], [6, 5, 4], [3, 2, 1]]
matrix1 = [[1 + (i + j * 3) for i in range(3)] for j in range(3)]
print('\nmatrix 1:')
for row in matrix1:
    print(row)

matrix2 = [[9 - (i + j * 3) for i in range(3)] for j in range(3)]
print("\nMatrix 2:")
for row in matrix2:
    print(row)

# - Используйте генераторы списков для вычисления произведения этих матриц.
#     product = [[30, 24, 18], [84, 69, 54], [138, 114, 90]]
## Даны матрицы
matrix1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
matrix2 = [[9, 8, 7], [6, 5, 4], [3, 2, 1]]

product = [
    [
        sum(matrix1[i][k] * matrix2[k][j] for k in range(3))
        for j in range(3)
    ]
    for i in range(3)

]
for row in product:
    print(row)

# - Выведите исходные матрицы и результат их произведения.






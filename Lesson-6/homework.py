# Домашнее задание: прорешайте еще раз индивидуально все задания, которые решали в классе.
#
#     - [х] в выбранных вариантах проставьте х или пропишите решение, если вариантов ответа не предусмотрено


# ---- ДАННЫЕ И ПЕРЕМЕННЫЕ ----

# Задание 1. Что представляет собой переменная в Python?
#     - [ ] хранилище данных
#     - [ ] ничего из перечисленного
#     - [ ] и ссылка, и хранилище данных
#     - [x] ссылка на объект в памяти
#
# Задание 2. Что делает оператор присваивания (=)?
#     - [ ] создает переменную, если ее ранее не было
#     - [x ] связывает переменную с данными
#     - [ ] обнуляет значение переменной
#     - [ ] заносит данные в переменную
#     - [ ] удаляет переменную с указанным именем
#
# Задание 3. Какая типизация реализована в Python? Отметьте все верные варианты.
#     - [ x] строгая типизация
#     - [ x] динамическая типизация
#     - [ ] нестрогая типизация
#     - [ ] статическая типизация
#
# Задание 4. Что происходит при присваивании одной переменной другой (a = b)?
#     - [ ] создаются две переменные, если они до этого не существовали, с нулевыми значениями
#     - [ ] такая операция недопустима: можно присваивать только объекты, а не переменные
#     - [ ] копирование данных и переменная a будет содержать копию информации из переменной b
#     - [ x] копирование ссылки и обе переменные ссылаются на один и тот же объект
#
# Задание 5. Как называется присваивание вида a = b = c = 0?
#     - [ ] цепным присваиванием
#     - [x ] каскадным присваиванием
#     - [ ] такая операция недопустима
#     - [ ] множественным присваиванием
#     - [ ] унитарным присваиванием
#
# Задание 6. Как называется присваивание вида a, b = 1, 2?
#     - [ ] каскадным присваиванием
#     - [ ] унитарным присваиванием
#     - [ ] цепным присваиванием
#     - [ ] такая операция недопустима
#     - [ x] множественным присваиванием
#
# Задание 7. Для чего используется функция type?
#     - [ ] для определения типа объекта, но не переменной
#     - [ x] для определения типа переменной, но не объекта
#     - [ ] для определения типа переменной или объекта
#     - [ ] такой функции в языке Python нет
#
# Задание 8. Выберите только правильные имена переменных.
#     - [ ] \n
#     - [ ] 7_b
#     - [x ] var_a
#     - [x ] S
#     - [ x] _b
#     - [x ] __arg_c__
#     - [ x] d25
#     - [ ] don't
#     - [ ] 25d
#     - [x ] TT1
#
# Задание 9. Различаются ли имена переменных arg, Arg, ARG?
#     - [ x] да
#     - [ ] нет
#     - [ ] такие имена недопустимы
#     - [ ] иногда
#
# Задание 10. Выберите верные варианты присвоения данных переменной b
# (считается, что других переменных в программе нет).
#     - [x ] b = "hello"
#     - [ x] b = "True"
#     - [ ] "abc" = b
#     - [ ] 5 = b
#     - [ ] False = b
#     - [ x] b = 5.8
#     - [ ] b = hello
#
# Задание 11. Что произойдет, если функции type присвоить число 7 (type = 7)?
#     - [ ] операция будет просто проигнорирована и программа продолжит выполняться дальше
#     - [ ] функция type возвратит тип числа 7
#     - [ ] число 7 станет синонимом функции type
#     - [ ] произойдет ошибка, так как type - это встроенная функция языка Python
#     - [ x] переменная type будет ссылаться на число 7

# Задание 12. Придумайте и запишите напротив названия переменным, в которых будут храниться:
#     - высота                                          height
#     - ширина                                          width
#     - стоимость товара                                price
#     - возраст                                         age
#     - сообщение об ошибке                             error_message
#     - сообщение об успехе                             success_message
#     - количество студентов                            student_number
#     - имя пользователя                                username
#     - Средняя температура за день                     average_daily_temperature
#     - Общий объем продаж за месяц                     total_monthly_sales
#     - Количество просмотров видео                     video_views
#     - Электронный адрес пользователя                  user_email
#     - Количество доступных мест в аудитории           available_seats
#     - Максимальная грузоподъемность лифта             maximum_lift_capacity
#     - Процент выполнения задачи                       task_completion_percentage
#     - Оценка пользователя после обслуживания          user_rating
#     - Суммарное время ожидания в очереди              total_wait_time
#     - Число страниц в документе                       page_count

# ---- ЧИСЛА И ОПЕРАЦИИ НАД НИМИ ----

# Задание 1. К какому типу данных относится числовой тип int?
#     - [ ] комплексному
#     - [ ] такой тип данных не существует
#     - [ ] вещественному
#     - [x ] целочисленному
#
# Задание 2. К какому типу данных относится числовой тип float?
#     - [ ] целочисленному
#     - [ ] комплексному
#     - [ ] такой тип данных не существует
#     - [x ] вещественному
#
# Задание 3. Какой тип данных отобразит команда print(type(-36))?
#     - [ ] complex
#     - [ ] bool
#     - [ ] float
#     - [ ] str
#     - [x ] int
#
# Задание 4. Какой тип данных отобразит команда print(type(3.67))?
#     - [ ] str
#     - [ ] int
#     - [ x] float
#     - [ ] complex
#     - [ ] bool
#
# Задание 5. Поставьте соответствия между арифметическими операторами и их названиями.
#     - [ //] целочисленное деление
#     - [ **] возведение в степень
#     - [ %] остаток от деления
#     - [ /] деление
#
# Задание 6. Какое значение мы увидим при выполнении в консоли команды 7.0 + 2.5?
#     - [ x] 9.5
#     - [ ] 9,5
#
# Задание 7. Какое значение будет получено при вычислении 2 ** 4?               16
#
# Задание 8. Какое значение будет получено при вычислении 32 / 2 ** 4?          2.0
#
# Задание 9. Какое значение будет получено при вычислении 11 % 3?               2       
#
# Задание 10. Какое значение будет получено при вычислении 11 % 33?             11
#
# Задание 11. Какой будет результат при выполнении команды 21 // 4?              5
# 
# Задание 12. Какой будет порядок выполнения операций 3 + 5 * 9 // 4 ** (2 - 1)? 
# 1.  (2 - 1) = 1
# 2.   4 ** 1 = 4
# 3.   5 * 9 = 45
# 4.   45 // 4 = 11
# 5.   3 + 11 = 14
#
# Задание 13. Какой тип данных мы увидим, выполнив строчку print(type(8/2))?
#     - [x] float
#     - [ ] int
#     - [ ] complex
#     - [ ] str
#
# Задание 14. Чему будет равно итоговое значение переменной i при выполнении программы:
#   i = 2
#   i += 3
#   print(i)
#   5
#
# Задание 15. Чему будет равно итоговое значение переменной k при выполнении программы:
k = 8
k *= 2
print(k)
16
# Задание 16. Допишите текст программы для вычисления модуля введенного с клавиатуры числа
# в переменную d и вывода значения в консоль с помощью функции print.
#   Например, ввод:
#   -5
#   Вывод:
#   5
input("Введите чмисло: ")
a = -5
print(abs(a))


# ---- ФУНКЦИИ PRINT(), INPUT() ----

# Задание 1. В программе определите три следующие переменные:
#   a = 7
#   b = -4
#   c = 3
#   Выведите в консоль их значения, используя одну функцию print
#   (между значениями переменных должен стоять один пробел):
#   7 -4 3
print (a, b, c)
#
# Задание 2. В программе определите три следующие переменные:
#   a = 7
#   b = -4
#   c = 3
#   Выведите в консоль их значения в столбик (каждое новое значение отображается с новой строчки),
#   используя одну функцию print.
#   7
#   -4
#   3
print(a)
print(b)
print(c)
# Задание 3. В программе определите две следующие строки:
#   s1 = "Hello"
#   s2 = "Berlin"
#   С помощью двух функций print (каждая отображает соответствующую строку) отобразите строки в консоли так,
#   чтобы они шли друг за другом через пробел.
#   Hello Berlin
s1 = "Hello"
s2 = "Berlin"
print(s1, end=" ")
print(s2)
#
# Задание 4. Допишите программу, в которой вводятся два слова (в переменные s1 и s2) в одну строчку через пробел,
#   и отображаются в консоли в формате:
#   Word 1: s1 | Word 2: s2
#   Например, ввод:
#   I love
#   Вывод:
#   Word 1: I | Word 2: love
s1 = "Word 1: s1"
s2 = "Word 2: s2"
print(s1, end=" ")
print( "|", end=" ")
print( s2 )
#
# Задание 5. Напишите программу, в которой вводятся два целых положительных числа и
#   в консоль выводится результат возведения первого числа в степень второго.
#   Например, ввод:
#   2 3
#   Вывод:
#   8
input("Введите число: ")
x = 2
y = 3
print(x**y)
# Задание 6. Выберите команду, которая позволяет сохранять одно целое введенное с клавиатуры число.
#     - [ x] d = int(input())
#     - [ ] такой команды не существует
#     - [ ] d = input()
#     - [ ] d = float(input())
#
# Задание 7. Выберите команду, которая позволяет сохранять строку, введенную с клавиатуры.
#     - [ ] d = float(input())
#     - [ ] d = int(input())
#     - [ x] d = input()
#     - [ ] такой команды не существует
#
# Задание 8. Напишите программу, которая принимает на вход два вещественных числа в одну строку через пробел
# и выводит на экран их сумму.
#   Например, ввод:
#   8 11
#   Вывод:
#   19.0
a, b = input('Введите два числа через пробел: ').split()
print(float(a) + float(b))
# a, b = map(float, input('Введите два числа через пробел: ').split())
# print(a + b)


# Задание 9. Вводятся длина и ширина прямоугольника (каждое вещественное значение с новой строки).
# Необходимо вычислить его периметр (сумму длин сторон) и результат вывести на экран.
#   Например, ввод:
#   8
#   11
#   Вывод:
#   38.0
length = 8.0
width = 11.0
a = length
b = width
print(a + a + b + b)
#
# Задание 10. Напишите программу вывода переменной math.pi с точностью до тысячных (три знака после запятой).
#   Вывод:
#   3.142
pi = round( 3.14159265359, 3 )
print(pi)
#
# Задание 11. Составить программу вывода на экран вещественного числа, вводимого с клавиатуры.
# Выводимому числу должно предшествовать сообщение "Вы ввели число" (без кавычек).
#   Например, ввод:
#   7.54
#   Вывод:
#   Вы ввели число 7.54
user_number = float(input("Вы ввели число:"))
print("Вы ввели число", user_number)
#
# Задание 12. Напишите программу, которая запрашивает число и выводит его абсолютное (положительное) значение:
#   Введите число:
#   Абсолютное значение:
x = float(input('Введите число: '))
print(abs(x))

# Задание 13. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает сумму этих двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Результат сложения:
num1 = float(input("Введите число 1: "))
num2 = float(input("Введите число 2: "))
sum_numbers = num1 + num2
print("Сумма двух чисел:", sum_numbers)
#
# Задание 14. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает меньшее из двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Меньшее число:
num1 = int(input("ведите первое чмсло: "))
num2 = int(input("ведите второе чмсло: "))
min_number = min(num1, num2)
print("Меньшее число:", min_number)
#
# Задание 15. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает большее из двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Большее число:
a = float(input( "Ведите число 1:"))
b = float(input("Введите число 2: "))
maximal = max(a , b)
print("Максимальное число:", maximal)
#
# Задание 16. Напишите программу, которая запрашивает последовательно дробное число, количество знаков после запятой,
# а потом показывает округленное число до этих знаков.
#   Введите дробное число:
#   До скольких знаков нужно округлить:
#   Округленное число:
a = float(input( "Ведите дробное число:"))
b = int(input("Введите количество знаков после запятой: "))
result = round(a, b)
print("округленное число:", result)
#
# Домашнее задание: прорешайте еще раз индивидуально все задания, которые решали в классе.
#
#     - [х] в выбранных вариантах проставьте х или пропишите решение, если вариантов ответа не предусмотрено
import math

# ---- ДАННЫЕ И ПЕРЕМЕННЫЕ ----

# Задание 1. Что представляет собой переменная в Python?
#     - [X] хранилище данных
#     - [ ] ничего из перечисленного
#     - [ ] и ссылка, и хранилище данных
#     - [ ] ссылка на объект в памяти
#
# Задание 2. Что делает оператор присваивания (=)?
#     - [ ] создает переменную, если ее ранее не было
#     - [X] связывает переменную с данными
#     - [ ] обнуляет значение переменной
#     - [ ] заносит данные в переменную
#     - [ ] удаляет переменную с указанным именем
#
# Задание 3. Какая типизация реализована в Python? Отметьте все верные варианты.
#     - [X] строгая типизация
#     - [X] динамическая типизация
#     - [ ] нестрогая типизация
#     - [ ] статическая типизация
#
# Задание 4. Что происходит при присваивании одной переменной другой (a = b)?
#     - [ ] создаются две переменные, если они до этого не существовали, с нулевыми значениями
#     - [ ] такая операция недопустима: можно присваивать только объекты, а не переменные
#     - [ ] копирование данных и переменная a будет содержать копию информации из переменной b
#     - [X] копирование ссылки и обе переменные ссылаются на один и тот же объект
#
# Задание 5. Как называется присваивание вида a = b = c = 0?
#     - [ ] цепным присваиванием
#     - [X] каскадным присваиванием
#     - [ ] такая операция недопустима
#     - [ ] множественным присваиванием
#     - [ ] унитарным присваиванием
#
# Задание 6. Как называется присваивание вида a, b = 1, 2?
#     - [ ] каскадным присваиванием
#     - [ ] унитарным присваиванием
#     - [ ] цепным присваиванием
#     - [ ] такая операция недопустима
#     - [X] множественным присваиванием
#
# Задание 7. Для чего используется функция type?
#     - [X] для определения типа объекта, но не переменной
#     - [ ] для определения типа переменной, но не объекта
#     - [ ] для определения типа переменной или объекта
#     - [ ] такой функции в языке Python нет
#
# Задание 8. Выберите только правильные имена переменных.
#     - [ ] \n
#     - [ ] 7_b
#     - [X] var_a
#     - [X] S
#     - [X] _b
#     - [X] __arg_c__
#     - [X] d25
#     - [ ] don't
#     - [ ] 25d
#     - [X] TT1
#
# Задание 9. Различаются ли имена переменных arg, Arg, ARG?
#     - [X] да
#     - [ ] нет
#     - [ ] такие имена недопустимы
#     - [ ] иногда
#
# Задание 10. Выберите верные варианты присвоения данных переменной b
# (считается, что других переменных в программе нет).
#     - [X] b = "hello"
#     - [X] b = "True"
#     - [ ] "abc" = b
#     - [ ] 5 = b
#     - [ ] False = b
#     - [X] b = 5.8
#     - [ ] b = hello
#
# Задание 11. Что произойдет, если функции type присвоить число 7 (type = 7)?
#     - [ ] операция будет просто проигнорирована и программа продолжит выполняться дальше
#     - [ ] функция type возвратит тип числа 7
#     - [ ] число 7 станет синонимом функции type
#     - [ ] произойдет ошибка, так как type - это встроенная функция языка Python
#     - [X] переменная type будет ссылаться на число 7

# Задание 12. Придумайте и запишите напротив названия переменным, в которых будут храниться:
# height - высота
# width - ширина
# price - стоимость товара
# age - возраст
# error101 - сообщение об ошибке
# success - сообщение об успехе
# count_stud - количество студентов
# user_name - имя пользователя
# day_temperature - Средняя температура за день
# total_sales - Общий объем продаж за месяц
# views_video - Количество просмотров видео
# user_email - Электронный адрес пользователя
# num_seats - Количество доступных мест в аудитории
# max_kg - Максимальная грузоподъемность лифта
# task_ready - Процент выполнения задачи
# rating - Оценка пользователя после обслуживания
# total_time - Суммарное время ожидания в очереди
# str_num - Число страниц в документе


# ---- ЧИСЛА И ОПЕРАЦИИ НАД НИМИ ----

# Задание 1. К какому типу данных относится числовой тип int?
#     - [ ] комплексному
#     - [ ] такой тип данных не существует
#     - [ ] вещественному
#     - [X] целочисленному
#
# Задание 2. К какому типу данных относится числовой тип float?
#     - [ ] целочисленному
#     - [ ] комплексному
#     - [ ] такой тип данных не существует
#     - [X] вещественному
#
# Задание 3. Какой тип данных отобразит команда print(type(-36))?
#     - [ ] complex
#     - [ ] bool
#     - [ ] float
#     - [ ] str
#     - [X] int
#
# Задание 4. Какой тип данных отобразит команда print(type(3.67))?
#     - [ ] str
#     - [ ] int
#     - [X] float
#     - [ ] complex
#     - [ ] bool
#
# Задание 5. Поставьте соответствия между арифметическими операторами и их названиями.
#     - [ ] целочисленное деление
#     - [ ] возведение в степень
#     - [ ] остаток от деления
#     - [ ] деление
#
# Задание 6. Какое значение мы увидим при выполнении в консоли команды 7.0 + 2.5?
#     - [X] 9.5
#     - [ ] 9,5
#
# Задание 7. Какое значение будет получено при вычислении 2 ** 4? = 16
#
# Задание 8. Какое значение будет получено при вычислении 32 / 2 ** 4? = 2
#
# Задание 9. Какое значение будет получено при вычислении 11 % 3 = 2
#
# Задание 10. Какое значение будет получено при вычислении 11 % 33? = 11
#
# Задание 11. Какой будет результат при выполнении команды 21 // 4? = 5
#
# Задание 12. Какой будет порядок выполнения операций 3 + 5 * 9 // 4 ** (2 - 1)? = 14
#
# Задание 13. Какой тип данных мы увидим, выполнив строчку print(type(8/2))?
#     - [X] float
#     - [ ] int
#     - [ ] complex
#     - [ ] str
#
# Задание 14. Чему будет равно итоговое значение переменной i при выполнении программы:
i = 2
i += 3
print(i)
#
# Задание 15. Чему будет равно итоговое значение переменной k при выполнении программы:
k = 8
k *= 2
print(k)
#
# Задание 16. Допишите текст программы для вычисления модуля введенного с клавиатуры числа
# в переменную d и вывода значения в консоль с помощью функции print.
#   Например, ввод:
#   -5
#   Вывод:
#   5
d = int (input("Введите число: "))
print (abs(d))

# ---- ФУНКЦИИ PRINT(), INPUT() ----
print ("--------ФУНКЦИИ PRINT(), INPUT()--------")
# Задание 1. В программе определите три следующие переменные:
a = 7
b = -4
c = 3
#   Выведите в консоль их значения, используя одну функцию print
#   (между значениями переменных должен стоять один пробел):
#   7 -4 3
print (a, b, c, sep = " ")
print ("---------------2---------------")
# Задание 2. В программе определите три следующие переменные:
#   a = 7
#   b = -4
#   c = 3
#   Выведите в консоль их значения в столбик (каждое новое значение отображается с новой строчки),
#   используя одну функцию print.
#   7
#   -4
#   3
print (a, b, c, sep = "\n")
print ("---------------3---------------")
# Задание 3. В программе определите две следующие строки:
#   s1 = "Hello"
#   s2 = "Berlin"
#   С помощью двух функций print (каждая отображает соответствующую строку) отобразите строки в консоли так,
#   чтобы они шли друг за другом через пробел.
#   Hello Berlin

s1 = "Hello"
s2 = "Berlin"
print ("Hello", end = " ")
print ("Berlin")
print ("---------------4---------------")

# Задание 4. Допишите программу, в которой вводятся два слова (в переменные s1 и s2) в одну строчку через пробел,
#   и отображаются в консоли в формате:
#   Word 1: s1 | Word 2: s2
#   Например, ввод:
#   I love
#   Вывод:
#   Word 1: I | Word 2: love

str1 = input("Word 1: ")
str2 = input("Word 2: ")
print("Word 1:", str1, "|", "Word 2:", str2)
print ("--------------5----------------")

# Задание 5. Напишите программу, в которой вводятся два целых положительных числа и
#   в консоль выводится результат возведения первого числа в степень второго.
#   Например, ввод:
#   2 3
#   Вывод:
#   8
number = int(input("Введите число: "))
degree = int(input("Введите степень числа: "))
print ("ответ:", pow (number, degree))
print ("-------------------------------")

# Задание 6. Выберите команду, которая позволяет сохранять одно целое введенное с клавиатуры число.
#     - [X] d = int(input())
#     - [ ] такой команды не существует
#     - [ ] d = input()
#     - [ ] d = float(input())
#
# Задание 7. Выберите команду, которая позволяет сохранять строку, введенную с клавиатуры.
#     - [ ] d = float(input())
#     - [ ] d = int(input())
#     - [X] d = input()
#     - [ ] такой команды не существует
#
# Задание 8. Напишите программу, которая принимает на вход два вещественных числа в одну строку через пробел
# и выводит на экран их сумму.
#   Например, ввод:
#   8 11
#   Вывод:
#   19.0
number1,number2 = map(float,input().split())
print(number1+number2)
print ("-------------9-----------------")

# Задание 9. Вводятся длина и ширина прямоугольника (каждое вещественное значение с новой строки).
# Необходимо вычислить его периметр (сумму длин сторон) и результат вывести на экран.
#   Например, ввод:
#   8
#   11
#   Вывод:
#   38.0

l,w = float(input("Введите первое число:  ")), float(input("Введите второе число:  "))
print (2*(l+w))
print ("------------10-----------------")

# Задание 10. Напишите программу вывода переменной math.pi с точностью до тысячных (три знака после запятой).
#   Вывод:
#   3.142

print ("Число Pi до 3 знака: ", round(math.pi, 3))
print ("-----------11-----------------")

# Задание 11. Составить программу вывода на экран вещественного числа, вводимого с клавиатуры.
# Выводимому числу должно предшествовать сообщение "Вы ввели число" (без кавычек).
#   Например, ввод:
#   7.54
#   Вывод:
#   Вы ввели число 7.54

number = float (input ("Введите число: "))
print ("Вы ввели число", number)
print ("------------12---------------")

# Задание 12. Напишите программу, которая запрашивает число и выводит его абсолютное (положительное) значение:
#   Введите число:
#   Абсолютное значение:

number = float (input("Введите число: "))
print ("Абсолютное положительное значение: ", abs(number))
print ("------------13-----------------")

# Задание 13. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает сумму этих двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Результат сложения:

num1 = float (input("Введите первое число: "))
num2 = float (input("Введите второе число: "))
print ("сумма: ", num1 + num2)
print ("------------14------------------")

# Задание 14. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает меньшее из двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Меньшее число:

x = int(input("Введите первое число: "))
y = int(input("Введите втрое число: "))
if x > y:
    print (y, "меньше, чем", x)
elif x < y:
    print(x, "меньше, чем", y)
else:
    print(x, "=", y)
print ("------------15------------------")

# Задание 15. Напишите программу, которая запрашивает последовательно два числа,
# а потом показывает большее из двух чисел.
#   Введите число 1:
#   Введите число 2:
#   Большее число:

x = int(input("Введите первое число: "))
y = int(input("Введите втрое число: "))
if x > y:
    print (x, "больше, чем", y)
elif x < y:
    print(y, "больше, чем", x)
else:
    print(x, "=", y)
print ("------------16------------------")

# Задание 16. Напишите программу, которая запрашивает последовательно дробное число, количество знаков после запятой,
# а потом показывает округленное число до этих знаков.
#   Введите дробное число:
#   До скольких знаков нужно округлить:
#   Округленное число:
#
numb = float(input("Введите дробное число: "))
okr = int(input("До скольких знаков нужно округлить: "))
print("Округленное число: ",round(numb, okr))

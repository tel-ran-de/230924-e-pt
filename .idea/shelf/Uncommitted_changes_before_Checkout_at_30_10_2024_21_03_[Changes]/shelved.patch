Index: Lesson-13/homework.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Задача 1: Анализ чисел\r\n# Напишите функцию `analyze_numbers(numbers)`, которая принимает список чисел\r\n# и возвращает кортеж из трех значений: сумма всех чисел, среднее значение и количество четных чисел.\r\n#\r\n# numbers = [1, 2, 3, 4, 5, 6]\r\n# Вывод функции: (21, 3.5, 3)\r\n\r\n\r\n# Задача 2: Работа со строками\r\n# Напишите функцию `analyze_strings(strings)`, которая принимает список строк\r\n# и возвращает кортеж из трех значений: самая длинная строка, самая короткая строка и количество строк, содержащих букву \"a\"..\r\n#\r\n# strings = [\"apple\", \"banana\", \"cherry\", \"date\"]\r\n# Вывод функции: ('banana', 'date', 3)\r\n\r\n\r\n# Задача 3: Обработка словаря сотрудников\r\n# Напишите функцию `analyze_salaries(employees)`, которая принимает словарь сотрудников и\r\n# возвращает кортеж из трех значений: средняя зарплата, максимальная зарплата и имя сотрудника с максимальной зарплатой.\r\n#\r\n# employees = {\"Alice\": 5000, \"Bob\": 7000, \"Charlie\": 6000}\r\n# Вывод функции: (6000.0, 7000, 'Bob')\r\n\r\n\r\n# Задача 4: Фильтрация списка\r\n# Напишите функцию `filter_numbers(numbers)`, которая принимает список чисел и\r\n# возвращает кортеж из двух списков: четные числа и нечетные числа.\r\n#\r\n# numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n# Вывод функции: ([2, 4, 6, 8, 10], [1, 3, 5, 7, 9])\r\n\r\n\r\n# Задача 5: Генерация словаря\r\n# Напишите функцию `create_dict(keys, values)`, которая принимает два списка: ключи и значения,\r\n# и возвращает словарь, где ключи из первого списка, а значения из второго.\r\n#\r\n# keys = [\"name\", \"age\", \"city\"]\r\n# values = [\"Alice\", 30, \"New York\"]\r\n# Вывод функции: {'name': 'Alice', 'age': 30, 'city': 'New York'}\r\n\r\n\r\n# Задача 6: Подсчет символов в строке\r\n# Напишите функцию `count_characters(string)`, которая принимает строку и\r\n# возвращает словарь, где ключи - это символы строки, а значения - количество их вхождений.\r\n#\r\n# string = \"hello world\"\r\n# Вывод функции: {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}\r\n\r\n\r\n# Задача 7: Обработка произвольного числа аргументов\r\n# Напишите функцию `sum_positive_negative(*args)`, которая принимает произвольное число числовых аргументов\r\n# и возвращает кортеж из двух значений: сумма положительных чисел и сумма отрицательных чисел.\r\n#\r\n# sum_positive_negative(1, -2, 3, -4, 5)\r\n# Вывод функции: (9, -6)\r\n\r\n\r\n# Задача 8: Генерация строки из именованных аргументов\r\n# Напишите функцию `generate_string(**kwargs)`, которая принимает произвольное число именованных аргументов и возвращает строку, состоящую из ключей и значений в формате \"key=value\".\r\n#\r\n# generate_string(name=\"Alice\", age=30, city=\"New York\")\r\n# Вывод функции: name=Alice, age=30, city=New York\r\n\r\n\r\n# Проект: Перепишите проект из урока 7 в функциональном стиле.\r\n# Управление инвентарем в интернет-магазине\r\n# Разработайте программу для управления инвентарем интернет-магазина.\r\n# Программа должна позволять добавлять новые товары и удалять имеющиеся,\r\n# обновлять наименование, цену и количество существующих товаров,\r\n# искать товары по названию, выводить список всех товаров и их количество,\r\n# а также выводить товары с количеством ниже заданного значения стоимости и количества.\r\n#\r\n# Меню:\r\n# 1. Показать список товаров.\r\n# 2. Добавить товар.\r\n# 3. Удалить товар.\r\n# 4. Обновить название товара, стоимость или количество.\r\n# 5. Найти товар по названию.\r\n# 6. Вывести список товаров меньше определнной стоимости.\r\n# 7. Вывести список товаров меньше определенного количества.\r\n\r\n# inventory = [\r\n#     {'product': \"Laptop\", 'price': 10, 'count': 13},\r\n#     {'product': \"Mouse\", 'price': 50, 'count': 1},\r\n#     {'product': \"Keyboard\", 'price': 30, 'count': 33},\r\n#     {'product': \"Monitor\", 'price': 20, 'count': 10}\r\n# ]\r\n\r\n\r\n
===================================================================
diff --git a/Lesson-13/homework.py b/Lesson-13/homework.py
--- a/Lesson-13/homework.py	
+++ b/Lesson-13/homework.py	
@@ -4,11 +4,27 @@
 #
 # numbers = [1, 2, 3, 4, 5, 6]
 # Вывод функции: (21, 3.5, 3)
+# ОТВЕТ:
+def analyze_numbers(numbers):
+    # Сумма всех чисел
+    total_sum = sum(numbers)
+
+    # Среднее значение
+    average = total_sum / len(numbers) if numbers else 0  # Защита от деления на ноль
 
+    # Количество четных чисел
+    even_count = sum(1 for num in numbers if num % 2 == 0)
+
+    return total_sum, average, even_count
+
+# Пример использования
+numbers = [1, 2, 3, 4, 5, 6]
+result = analyze_numbers(numbers)
+print(result)  # (21, 3.5, 3)
 
 # Задача 2: Работа со строками
 # Напишите функцию `analyze_strings(strings)`, которая принимает список строк
-# и возвращает кортеж из трех значений: самая длинная строка, самая короткая строка и количество строк, содержащих букву "a"..
+# и возвращает кортеж из трех значений: самая длинная строка, самая короткая строка и количество строк, содержащих букву "a".
 #
 # strings = ["apple", "banana", "cherry", "date"]
 # Вывод функции: ('banana', 'date', 3)
